{"ast":null,"code":"const API_KEY = process.env.REACT_APP_API_KEY;\n// const url = \"api.openweathermap.org/data/2.5/forecast?\";\n\nconst getWeatherData = async function () {\n  let city = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"paris\";\n  let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"metric\";\n  const URL = `https://api.openweathermap.org/data/2.5/forecast?q=paris&appid=${API_KEY}&units=${unit}`;\n  const res = await fetch(URL);\n  if (res.ok) {\n    const response = await res.json();\n    console.log(response, \"dev\");\n    const data = response.list.filter(item => item.dt_txt.includes(\"00:00:00\")).map(item => ({\n      temp: item.main.temp,\n      date: item.dt,\n      desc: item.weather[0].description,\n      icon: item.weather[0].id\n    }));\n    console.log(data, \"test2\");\n    return data;\n  }\n};\nexport default getWeatherData;","map":{"version":3,"names":["API_KEY","process","env","REACT_APP_API_KEY","getWeatherData","city","unit","URL","res","fetch","ok","response","json","console","log","data","list","filter","item","dt_txt","includes","map","temp","main","date","dt","desc","weather","description","icon","id"],"sources":["/Users/omotayoolarewaju/Desktop/tayos-weather-app2/src/services.js"],"sourcesContent":["const API_KEY = process.env.REACT_APP_API_KEY;\n// const url = \"api.openweathermap.org/data/2.5/forecast?\";\n\nconst getWeatherData = async (city=\"paris\", unit=\"metric\") =>{\n    const URL = `https://api.openweathermap.org/data/2.5/forecast?q=paris&appid=${API_KEY}&units=${unit}`;\n    const res = await fetch(URL);\n    if (res.ok){\n        const response = await res.json()\n        console.log(response, \"dev\")\n        const data = response.list\n        .filter((item)=>item.dt_txt.includes(\"00:00:00\"))\n        .map((item)=>\n        ({\n            temp : item.main.temp,\n            date : item.dt,\n            desc : item.weather[0].description,\n            icon : item.weather[0].id\n\n        }\n        )\n        )\n        console.log(data, \"test2\")\n        return data;\n    }\n}\n\nexport default getWeatherData;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC7C;;AAEA,MAAMC,cAAc,GAAG,kBAAsC;EAAA,IAA/BC,IAAI,uEAAC,OAAO;EAAA,IAAEC,IAAI,uEAAC,QAAQ;EACrD,MAAMC,GAAG,GAAI,kEAAiEP,OAAQ,UAASM,IAAK,EAAC;EACrG,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAC5B,IAAIC,GAAG,CAACE,EAAE,EAAC;IACP,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,EAAE;IACjCC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAE,KAAK,CAAC;IAC5B,MAAMI,IAAI,GAAGJ,QAAQ,CAACK,IAAI,CACzBC,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAChDC,GAAG,CAAEH,IAAI,KACT;MACGI,IAAI,EAAGJ,IAAI,CAACK,IAAI,CAACD,IAAI;MACrBE,IAAI,EAAGN,IAAI,CAACO,EAAE;MACdC,IAAI,EAAGR,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAClCC,IAAI,EAAGX,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG;IAE3B,CAAC,CACA,CACA;IACDjB,OAAO,CAACC,GAAG,CAACC,IAAI,EAAE,OAAO,CAAC;IAC1B,OAAOA,IAAI;EACf;AACJ,CAAC;AAED,eAAeX,cAAc"},"metadata":{},"sourceType":"module"}