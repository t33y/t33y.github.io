{"ast":null,"code":"var _jsxFileName = \"/Users/omotayoolarewaju/Desktop/tayos-weather-app2/src/components/DayCard.jsx\";\nimport React from \"react\";\nimport \"./DayCard.css\";\nimport rain from \"../assets/rainy.jpg\";\nimport hot from \"../assets/hot.jpg\";\nimport cold from \"../assets/cold.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayCard = _ref => {\n  let {\n    data,\n    unit\n  } = _ref;\n  const {\n    temp,\n    date,\n    desc,\n    icon\n  } = data;\n  const newDate = new Date(date * 1000);\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const day = newDate.getDate();\n  const month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const thresholdHot = unit === \"imperial\" ? 80 : 26;\n  const thresholdCold = unit === \"imperial\" ? 61 : 16;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    className: \"card\",\n    children: [console.log(desc.includes(\"rain\"), desc), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${desc.includes(\"rain\") ? rain : temp > thresholdHot ? hot : temp < thresholdCold ? cold : \"\"})`,\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 1,\n        opacity: 0.4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: days[newDate.getDay()]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [`${month[newDate.getMonth()]} ${day}`, /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: day.toString().endsWith(1) && day !== 11 ? \"st\" : day.toString().endsWith(2) && day !== 12 ? \"nd\" : day.toString().endsWith(3) && day !== 13 ? \"rd\" : \"th\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/wn/${icon}@2x.png`,\n      alt: \"weatherIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: unit === \"imperial\" ? `${temp.toFixed(0)}째F` : `${temp.toFixed(0)}째C`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = DayCard;\nexport default DayCard;\nvar _c;\n$RefreshReg$(_c, \"DayCard\");","map":{"version":3,"names":["React","rain","hot","cold","DayCard","data","unit","temp","date","desc","icon","newDate","Date","days","day","getDate","month","thresholdHot","thresholdCold","position","console","log","includes","backgroundImage","top","left","right","bottom","zIndex","opacity","getDay","getMonth","toString","endsWith","toFixed"],"sources":["/Users/omotayoolarewaju/Desktop/tayos-weather-app2/src/components/DayCard.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./DayCard.css\"\nimport rain from \"../assets/rainy.jpg\";\nimport hot from \"../assets/hot.jpg\";\nimport cold from \"../assets/cold.jpg\";\n\nconst DayCard = ({data, unit}) => {\n\n    const {temp, date, desc, icon} = data\n\n    const newDate = new Date(date *1000);\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const day = newDate.getDate();\n    const month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const thresholdHot = unit === \"imperial\" ? 80 : 26;\n    const thresholdCold = unit === \"imperial\" ? 61 : 16;\n\n    return(\n        <div style={{position: \"relative\"}} className=\"card\">\n            {console.log(desc.includes(\"rain\"), desc)}\n            <div style={{\n                    backgroundImage:`url(${\n                        desc.includes(\"rain\")? rain\n                        :temp > thresholdHot? hot\n                        :temp < thresholdCold? cold : \"\"                        \n                    })`, \n                    position:\"absolute\", \n                    top:0, \n                    left:0, \n                    right:0, \n                    bottom:0, \n                    zIndex:1, \n                    opacity:0.4\n                }} />\n                <h3>{days[newDate.getDay()]}</h3>\n                <p>{`${month[newDate.getMonth()]} ${day}`}\n                    <sup>{\n                        (day.toString().endsWith(1) && day !== 11) ? \"st\"\n                        :(day.toString().endsWith(2) && day !== 12) ? \"nd\"\n                        :(day.toString().endsWith(3) && day !== 13) ? \"rd\": \"th\"\n                    }</sup> \n                </p>\n                <img src= {`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"weatherIcon\" />\n                <h3>{unit === \"imperial\" ? `${temp.toFixed(0)}째F`:`${temp.toFixed(0)}째C`}</h3>\n                <p>{desc}</p>\n        </div>\n    )\n};\n\nexport default DayCard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}