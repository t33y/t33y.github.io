{"ast":null,"code":"var _jsxFileName = \"/Users/omotayoolarewaju/Desktop/hangman/src/HangmanWord.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HangmanWord = () => {\n  const word = \"hang man\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textTransform: \"uppercase\",\n      fontWeight: \"bold\",\n      fontSize: \"40px\"\n    },\n    children: word.split(\"\").map(letter => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: \"underline\"\n        },\n        children: letter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 22\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = HangmanWord;\nexport default HangmanWord;\nvar _c;\n$RefreshReg$(_c, \"HangmanWord\");","map":{"version":3,"names":["React","HangmanWord","word","textTransform","fontWeight","fontSize","split","map","letter","textDecoration"],"sources":["/Users/omotayoolarewaju/Desktop/hangman/src/HangmanWord.jsx"],"sourcesContent":["import React from 'react'\n\nconst HangmanWord = () =>{\n    const word = \"hang man\"\n    return(\n        <div style={{textTransform:\"uppercase\", fontWeight:\"bold\", fontSize:\"40px\"  }}>\n            {word.split(\"\").map((letter)=>{\n             return  <span style={{textDecoration:\"underline\"}}>{letter}</span>\n            })}\n        </div>\n    )\n} \n\nexport default HangmanWord;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,WAAW,GAAG,MAAK;EACrB,MAAMC,IAAI,GAAG,UAAU;EACvB,oBACI;IAAK,KAAK,EAAE;MAACC,aAAa,EAAC,WAAW;MAAEC,UAAU,EAAC,MAAM;MAAEC,QAAQ,EAAC;IAAQ,CAAE;IAAA,UACzEH,IAAI,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,MAAM,IAAG;MAC7B,oBAAQ;QAAM,KAAK,EAAE;UAACC,cAAc,EAAC;QAAW,CAAE;QAAA,UAAED;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ;IACnE,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,KATKP,WAAW;AAWjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}