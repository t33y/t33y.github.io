{"ast":null,"code":"var _jsxFileName = \"/Users/omotayoolarewaju/Desktop/hangman/src/HangmanWord.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HangmanWord = _ref => {\n  let {\n    words,\n    guessedLetters,\n    setGuessedLetters\n  } = _ref;\n  const word = words[Math.floor(Math.random() * 11)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textTransform: \"uppercase\",\n      fontWeight: \"bold\",\n      fontSize: \"40px\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      gap: \"7px\"\n    },\n    children: word === null || word === void 0 ? void 0 : word.split(\"\").map(letter => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: \"10px black solid\",\n          width: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            visibility: guessedLetters.includes(letter) ? \"visible\" : \"hidden\"\n          },\n          children: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 22\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = HangmanWord;\nexport default HangmanWord;\nvar _c;\n$RefreshReg$(_c, \"HangmanWord\");","map":{"version":3,"names":["React","HangmanWord","words","guessedLetters","setGuessedLetters","word","Math","floor","random","textTransform","fontWeight","fontSize","display","flexDirection","gap","split","map","letter","borderBottom","width","visibility","includes"],"sources":["/Users/omotayoolarewaju/Desktop/hangman/src/HangmanWord.jsx"],"sourcesContent":["import React from 'react'\n\nconst HangmanWord = ({words, guessedLetters, setGuessedLetters}) =>{\n    const word = words[Math.floor(Math.random()* 11)]\n    return(\n        <div style={{textTransform:\"uppercase\", fontWeight:\"bold\", fontSize:\"40px\", display:\"flex\", flexDirection:\"row\", gap:\"7px\"  }}>\n            {word?.split(\"\").map((letter)=>{\n             return  <div style={{borderBottom:\"10px black solid\", width:\"50px\"}}>\n                 <span style={\n                        {visibility: guessedLetters.includes(letter)? \"visible\":\"hidden\"\n                        }}>\n                        {letter}</span>\n             </div>\n               })}\n        </div>\n    )\n} \n\nexport default HangmanWord;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,WAAW,GAAG,QAA+C;EAAA,IAA9C;IAACC,KAAK;IAAEC,cAAc;IAAEC;EAAiB,CAAC;EAC3D,MAAMC,IAAI,GAAGH,KAAK,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAE,EAAE,CAAC,CAAC;EACjD,oBACI;IAAK,KAAK,EAAE;MAACC,aAAa,EAAC,WAAW;MAAEC,UAAU,EAAC,MAAM;MAAEC,QAAQ,EAAC,MAAM;MAAEC,OAAO,EAAC,MAAM;MAAEC,aAAa,EAAC,KAAK;MAAEC,GAAG,EAAC;IAAO,CAAE;IAAA,UACzHT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,MAAM,IAAG;MAC9B,oBAAQ;QAAK,KAAK,EAAE;UAACC,YAAY,EAAC,kBAAkB;UAAEC,KAAK,EAAC;QAAM,CAAE;QAAA,uBAChE;UAAM,KAAK,EACJ;YAACC,UAAU,EAAEjB,cAAc,CAACkB,QAAQ,CAACJ,MAAM,CAAC,GAAE,SAAS,GAAC;UACxD,CAAE;UAAA,UACDA;QAAM;UAAA;UAAA;UAAA;QAAA;MAAQ;QAAA;QAAA;QAAA;MAAA,QACpB;IACJ,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACH;AAEd,CAAC;AAAA,KAdKhB,WAAW;AAgBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}